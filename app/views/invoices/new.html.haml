:ruby
  unregistered_slots = @event_slots - @registered_slots
  unregistered_slots = unregistered_slots.reverse
  active_invoice = @all_invoices.find { |i| i.in_ss == false }

  registrations =
    @all_invoices.reduce([]) { |array, invoice| array + invoice.registrations }
  opt_regs =
    registrations.select { |reg| reg.registerable_type == 'Option' }
  adjustments =
    @all_invoices.reduce([]) { |array, inv| array + inv.adjustments }

  confirmed_slot_regs =
    @all_invoices.select(&:in_ss)
                 .reduce([]) { |array, invoice| array + invoice.slot_regs }
  confirmed_opt_regs =
    @all_invoices.select(&:in_ss)
                 .reduce([]) { |array, invoice| array + invoice.opt_regs }

  stimulus_actions = 'register:toggle->invoice#change ' \
                     'invoice:add@window->price#calculate ' \
                     'invoice:remove@window->price#calculate'

  frame_id = "child#{@child.id}invoice#{active_invoice.id}"

%main{ class: 'd-flex flex-column justify-content-start' \
              'align-items-start text-start bg-white',
       data: { controller: 'invoice price',
               action: stimulus_actions,
               'price-price-list-value': @price_list.to_json,
               'price-snack-cost-value': TimeSlot::SNACK_COST,
               'price-sibling-event-cost-value': @siblings_event_cost || 0,
               'price-event-name-value': @event.name },
       id: 'event-show' }

  = render 'invoices/registration_page/header',
           child: @child, siblings: @siblings, event: @event,
           event_cost: @event_cost

  = render 'invoices/registration_page/parent_messages',
           child: @child, siblings: @siblings, event: @event

  %details.w-100.border.rounded{ name: 'accordion' }
    %summary.bg-primary.rounded.p-3
      = t('.more_info')
    = render 'invoices/registration_page/more_info',
             adjustments:, event: @event, child: @child,
             price_list: @price_list

  %details.w-100.border.rounded.mt-n3{ name: 'accordion', open: true }
    %summary.bg-primary.rounded.p-3= t('.unregistered_slots')
    .d-flex.flex-column.justify-content-around.flex-lg-row.flex-wrap.gap-3.p-3
      - cards_html = combo_card_for event: @event,
                                    school: @event.school,
                                    child: @child,
                                    registrations: registrations,
                                    confirmed_slot_regs: confirmed_slot_regs
      = cards_html

      = render partial: 'time_slots/add_slot',
              collection: unregistered_slots,
              locals: { child: @child, registrations: registrations, event: @event,
                        confirmed_slot_regs: confirmed_slot_regs,
                        confirmed_opt_regs: confirmed_opt_regs,
                        opt_regs: opt_regs }


  %details.w-100.border.rounded.mt-n3{ name: 'accordion' }
    %summary.bg-primary.rounded.p-3= t('.registered_slots')
    .d-flex.flex-column.justify-content-around.flex-lg-row.flex-wrap.gap-3.p-3
      = render partial: 'time_slots/add_slot',
               collection: @registered_slots,
               locals: { child: @child, registrations:, event: @event,
                         confirmed_slot_regs:, confirmed_opt_regs:, opt_regs: }

  = render 'invoices/registration_page/price_footer',
           all_invoices: @all_invoices, child: @child, confirmed_opt_regs:,
           event_options: @event.options, frame_id:, options: @options,
           registrations:, siblings: @siblings

%dialog.rounded.w-100.h-100#invoice-preview
  = turbo_frame_tag frame_id
